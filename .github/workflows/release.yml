name: Release

on:
  push:
    branches:
      - main
      - next

permissions: write-all

env:
  NODE_VERSION: '18'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 4
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: oleksiyrudenko/gha-git-credentials@v2.1
        with:
          token: '${{ secrets.GH_TOKEN }}'
      - name: Prepare repository
        run: git fetch --unshallow --tags
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npm run ci:build
      # upload coverage info
      - if: ${{ github.actor != 'dependabot[bot]' }}
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          coverageLocations: coverage/lcov.info:lcov
          coverageCommand: npm run ci:test
      - uses: fossas/fossa-action@main
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx auto shipit
